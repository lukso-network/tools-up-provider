name: Github + NPM Release

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.4

      - name: Use Node.js '20.17.0'
        uses: actions/setup-node@v4
        with:
          node-version: "20.17.0"
          registry-url: "https://registry.npmjs.org"
          scope: "@lukso"
          cache: "pnpm"

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Dependencies
        run: pnpm install

      # `npm run build:js` will also generate the auto-generated constants for methods, errors and events,
      # including extracting their devdocs and userdocs
      - name: Prepare artifacts to publish
        run: pnpm run build

      - name: Tests
        run: pnpm run test

  publish-dev-packages:
    needs: release-please
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.17.0"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm run build

      - name: Create dev version and swap name for GitHub Packages
        run: |
          CURRENT_VERSION=$(node -p "require('./packages/up-provider/package.json').version")
          # Remove any existing -test* suffix and create clean dev version
          BASE_VERSION=$(echo "$CURRENT_VERSION" | sed 's/-test[0-9]*$//')
          DEV_VERSION="${BASE_VERSION}-dev.$(git rev-parse --short HEAD)"
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('./packages/up-provider/package.json', 'utf8'));
            pkg.version = '$DEV_VERSION';
            pkg.name = '@lukso-network/up-provider';
            fs.writeFileSync('./packages/up-provider/package.json', JSON.stringify(pkg, null, 2) + '\n');
          "

      - name: Publish dev version to GitHub Packages
        run: |
          echo "@lukso-network:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          pnpm --filter @lukso-network/up-provider publish --tag dev --registry https://npm.pkg.github.com --no-git-checks

      - name: Restore original package name and version
        if: always()
        run: |
          # Get the original version from git (before any modifications)
          git checkout HEAD -- packages/up-provider/package.json || echo "File already clean"

  build-and-deploy:
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.4

      - name: Use Node.js '20.17.0'
        uses: actions/setup-node@v4
        with:
          node-version: "20.17.0"
          registry-url: "https://registry.npmjs.org"
          scope: "@lukso"
          cache: "pnpm"

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Dependencies
        run: pnpm install

      - name: Prepare artifacts to publish
        run: pnpm run build

      - name: Tests
        run: pnpm run test

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Colled documentation
        run: |
          pnpm gendocs

      - name: 'Deploy astro example'
        run: |
          if [ "$CLOUDFLARE_API_TOKEN" == "" ]; then
            echo "CLOUDFLARE_API_TOKEN is not set"
            exit 1
          fi
          if [ "$CLOUDFLARE_ACCOUNT_ID" == "" ]; then
            echo "CLOUDFLARE_ACCOUNT_ID is not set"
            exit 1
          fi
          pnpm wrangler:deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      
      - name: Deploy
        if: ${{ steps.release.outputs.release_created }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          enable_jekyll: true

      - name: Publish to GitHub Packages
        if: ${{ steps.release.outputs.releases_created }}
        working-directory: packages/up-provider
        run: |
          echo "@lukso:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          npm publish --registry https://npm.pkg.github.com

      - run: |
          # Copy README to package folder
          cp README.md packages/up-provider/README.md
          (cat <<END > outputs.json
          ${{toJSON(steps.release.outputs)}}
          END
          )
          node ./scripts/publish.mjs outputs.json
        if: ${{ steps.release.outputs.releases_created }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
